version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=recipe
      - POSTGRES_USER=recipe_user
      - POSTGRES_DB=recipe_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U recipe_user -d recipe_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "dockerize -wait tcp://db:5432 -timeout 60s &&
             python manage.py makemigrations users recipes &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./app:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - POSTGRES_PASSWORD=recipe
      - POSTGRES_USER=recipe_user
      - POSTGRES_DB=recipe_db
      - DB_HOST=db
      - DB_PORT=5432
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

  minio:
    image: minio/minio:latest
    volumes:
      - minio_data:/data
    env_file:
      - ./.env
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/static
      - media_volume:/media
    depends_on:
      - web

volumes:
  postgres_data:
  minio_data:
  static_volume:
  media_volume: